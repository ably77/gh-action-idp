      - name: Create a unique branch
        id: create_branch
        run: |
          BRANCH_NAME="deploy-service-${{ github.run_id }}-${{ github.event.inputs.workspace_name }}-${{ github.event.inputs.team_name }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create apps directory
        run: mkdir -p apps

      - name: Create Application manifest
        id: create_manifest
        run: |
          WORKSPACE_NAME=${{ github.event.inputs.workspace_name }}
          TEAM_NAME=${{ github.event.inputs.team_name }}

          cat <<EOF > apps/${WORKSPACE_NAME}-${TEAM_NAME}-sample-service.yaml
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: fake-service
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            destination:
              server: "https://kubernetes.default.svc"
            source:
              repoURL: 'https://github.com/ably77/gh-action-idp'
              targetRevision: HEAD
              path: fake-service-helm-chart
              helm:
                values: |
                  namespace: ${TEAM_NAME}

                  istio:
                    revision: "1-22"

                  app:
                    name: app-${TEAM_NAME}
                    tier: "1"
                    replicas: 1
                    image:
                      repository: nicholasjackson/fake-service
                      tag: v0.26.2        

                  service:
                    port: 8080
                    targetPort: 8080        

                  env:
                    LISTEN_ADDR: "0.0.0.0:8080"
                    NAME: "app-${TEAM_NAME}"
                    SERVER_TYPE: "http"
                    MESSAGE: "Hello From app-${TEAM_NAME}!"
                    UPSTREAM_URIS: ""
                    UPSTREAM_WORKERS: "1"
                    TIMING_50_PERCENTILE: "0ms"
                    TIMING_90_PERCENTILE: "0ms"
                    TIMING_99_PERCENTILE: "0ms"
                    HTTP_CLIENT_REQUEST_TIMEOUT: "1s"
                    HTTP_SERVER_KEEP_ALIVES: "true"
                    HTTP_CLIENT_KEEP_ALIVES: "true"

            syncPolicy:
              automated:
                prune: true
                selfHeal: true
          EOF

      - name: Commit and push changes
        run: |
          git add apps/${WORKSPACE_NAME}-${TEAM_NAME}-sample-service.yaml
          git commit -m "Deployed sample service for workspace ${{ github.event.inputs.workspace_name }} and team ${{ github.event.inputs.team_name }} using GitHub Action"
          for i in {1..5}; do
            git push origin ${{ env.BRANCH_NAME }} && break || (git fetch origin main && git rebase origin/main && sleep $((i*2)))
          done
