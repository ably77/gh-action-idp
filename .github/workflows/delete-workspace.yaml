name: Delete Workspace Action

on:
  workflow_dispatch:
    inputs:
      workspace_name:
        description: 'The name of the Workspace'
        required: true
        type: string

permissions:
  contents: write

jobs:
  delete-manifests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Create a unique branch
        id: create_branch
        run: |
          BRANCH_NAME="delete-workspace-${{ github.run_id }}-${{ github.event.inputs.workspace_name }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Delete Workspace, WorkspaceSettings, and Parent RouteTable manifests
        run: |
          WORKSPACE_NAME=${{ github.event.inputs.workspace_name }}

          # Define file paths
          WORKSPACE_FILE_PATH="mesh-admin/${WORKSPACE_NAME}-workspace.yaml"
          WORKSPACE_SETTINGS_FILE_PATH="mesh-admin/${WORKSPACE_NAME}-workspacesettings.yaml"
          PARENT_ROUTETABLE_FILE_PATH="routes/${WORKSPACE_NAME}-parent-routetable.yaml"

          # Delete Workspace, WorkspaceSettings, and Parent RouteTable files
          git rm -f "$WORKSPACE_FILE_PATH" || echo "Workspace file $WORKSPACE_FILE_PATH not found."
          git rm -f "$WORKSPACE_SETTINGS_FILE_PATH" || echo "WorkspaceSettings file $WORKSPACE_SETTINGS_FILE_PATH not found."
          git rm -f "$PARENT_ROUTETABLE_FILE_PATH" || echo "Parent RouteTable file $PARENT_ROUTETABLE_FILE_PATH not found."

      - name: Commit and push changes
        run: |
          git commit -m "Deleted Workspace, WorkspaceSettings, and Parent RouteTable for workspace ${{ github.event.inputs.workspace_name }} using GitHub Action"
          for i in {1..5}; do
            git push origin ${{ env.BRANCH_NAME }} && break || (git fetch origin main && git rebase origin/main && sleep $((i*2)))
          done

      - name: Merge branch into main
        run: |
          for i in {1..5}; do
            git fetch origin main
            git checkout main
            git pull origin main
            git merge --allow-unrelated-histories --no-ff ${{ env.BRANCH_NAME }}
            git push origin main && break || (git pull --rebase origin main && sleep $((i*2)))
          done

      - name: Delete branch after merge
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }}
