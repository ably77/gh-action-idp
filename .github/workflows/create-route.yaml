name: Create RouteTable Action

on:
  workflow_dispatch:
    inputs:
      route_name:
        description: 'The name of the RouteTable'
        required: true
        type: string
      hosts:
        description: 'Comma-separated list of hosts'
        required: true
        type: string
      matcher_prefix:
        description: 'Prefix for URI matcher'
        required: true
        type: string
      destination_name:
        description: 'Name of the destination service'
        required: true
        type: string
      destination_port:
        description: 'Port number of the destination service'
        required: true
        type: string

permissions:
  contents: write

jobs:
  update-manifest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Create an empty branch
        id: create_branch
        run: |
          BRANCH_NAME="route-update-${{ github.run_id }}-${{ github.event.inputs.route_name }}"
          git checkout --orphan $BRANCH_NAME
          git rm -rf .
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Render RouteTable manifest based on input
        id: render_manifest
        run: |
          ROUTE_NAME=${{ github.event.inputs.route_name }}
          HOSTS=${{ github.event.inputs.hosts }}
          MATCHER_PREFIX=${{ github.event.inputs.matcher_prefix }}
          DESTINATION_NAME=${{ github.event.inputs.destination_name }}
          DESTINATION_PORT=${{ github.event.inputs.destination_port }}

          FILE_PATH="routes/${ROUTE_NAME}.yaml"

          mkdir -p routes

          cat <<EOF > $FILE_PATH
          apiVersion: networking.gloo.solo.io/v2
          kind: RouteTable
          metadata:
            name: ${ROUTE_NAME}
            namespace: gh-action-idp
          spec:
            hosts:
              - '${HOSTS}'
            virtualGateways:
              - name: mgmt-north-south-gw-443
                namespace: istio-gateways
                cluster: mgmt
            workloadSelectors: []
            http:
              - name: ${ROUTE_NAME}
                matchers:
                  - uri:
                      prefix: ${MATCHER_PREFIX}
                forwardTo:
                  destinations:
                    - ref:
                        name: ${DESTINATION_NAME}
                        namespace: gh-action-idp
                      port:
                        number: ${DESTINATION_PORT}
          EOF

          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV

      - name: Commit and push changes
        run: |
          git add ${{ env.FILE_PATH }}
          git commit -m "Add new RouteTable for route ${{ github.event.inputs.route_name }}"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Merge branch into main
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          git merge --allow-unrelated-histories --no-ff ${{ env.BRANCH_NAME }}
          git push origin main || (git pull --rebase origin main && git push origin main)

      - name: Delete branch after merge
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }}
