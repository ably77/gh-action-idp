name: Apply Delegate Route

on:
  workflow_dispatch:
    inputs:
      workspace_name:
        description: 'The name of the Workspace and RouteTable'
        required: true
        type: string
      matchers:
        description: 'Comma-separated list of URI prefixes for matchers'
        required: true
        type: string
      destination_name:
        description: 'Name of the destination service'
        required: true
        type: string
      destination_port:
        description: 'Port number of the destination service'
        required: true
        type: string

permissions:
  contents: write

jobs:
  apply-delegate-route:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Create an empty branch
        id: create_branch
        run: |
          BRANCH_NAME="delegate-route-${{ github.run_id }}-${{ github.event.inputs.workspace_name }}"
          git checkout --orphan $BRANCH_NAME
          git rm -rf .
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Render Delegate RouteTable manifest based on input
        id: render_manifest
        run: |
          WORKSPACE_NAME=${{ github.event.inputs.workspace_name }}
          MATCHERS=${{ github.event.inputs.matchers }}
          DESTINATION_NAME=${{ github.event.inputs.destination_name }}
          DESTINATION_PORT=${{ github.event.inputs.destination_port }}

          ROUTETABLE_FILE_PATH="routes/${WORKSPACE_NAME}-delegate-routetable.yaml"

          mkdir -p routes

          # Split the matchers and write each one into the YAML file
          IFS=',' read -ra MATCHER_ARRAY <<< "$MATCHERS"
          MATCHER_YAML=""
          for MATCHER in "${MATCHER_ARRAY[@]}"; do
            MATCHER_YAML="${MATCHER_YAML}\n    - uri:\n        prefix: ${MATCHER}"
          done

          # Write the RouteTable YAML file
          cat <<EOF > $ROUTETABLE_FILE_PATH
          apiVersion: networking.gloo.solo.io/v2
          kind: RouteTable
          metadata:
            name: ${WORKSPACE_NAME}-delegate
            namespace: ${WORKSPACE_NAME}
            labels:
              workspace: ${WORKSPACE_NAME}
          spec:
            http:
            - name: ${WORKSPACE_NAME}-delegate
              matchers:${MATCHER_YAML}
              forwardTo:
                destinations:
                - ref:
                    name: ${DESTINATION_NAME}
                    namespace: ${WORKSPACE_NAME}
                  port:
                    number: ${DESTINATION_PORT}
          EOF

          echo "ROUTETABLE_FILE_PATH=$ROUTETABLE_FILE_PATH" >> $GITHUB_ENV

      - name: Commit and push changes
        run: |
          git add ${{ env.ROUTETABLE_FILE_PATH }}
          git commit -m "Add new Delegate RouteTable for workspace ${{ github.event.inputs.workspace_name }}"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Merge branch into main
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          git merge --allow-unrelated-histories --no-ff ${{ env.BRANCH_NAME }} || \
          (git checkout --theirs -- routes/${{ github.event.inputs.workspace_name }}-delegate-routetable.yaml && git add routes/${{ github.event.inputs.workspace_name }}-delegate-routetable.yaml && git commit -m "Resolve conflict by keeping new changes" && git push origin main)
          git push origin main || (git pull --rebase origin main && git push origin main)

      - name: Delete branch after merge
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }}
